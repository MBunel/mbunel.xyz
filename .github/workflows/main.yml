on:
  push:
    branches:
    - main
    
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build and deploy
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Guix Cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/guix
          # use a key that (almost) never matches
          key: guix-cache-${{ github.sha }}
          restore-keys: |
            guix-cache-
      # Cannot use a cache for /gnu/store, since restore fails
      - name: Install GNU Guix
        uses: PromyLOPh/guix-install-action@v1.6
        with:
          pullAfterInstall: false
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Build
        run: guix time-machine -C channels.scm -- shell -m manifest.scm -- emacs -Q --batch -l publish.el
        env:
          WEBLORG_ENV: prod
          LANG: fr_FR.UTF-8
        working-directory: ${{ github.workspace }}
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: ${{ github.workspace }}/output
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

